local Path = {}
local PathfindingService = game:GetService("PathfindingService")
local Players = game:GetService("Players")

function Path.createPath(character, destination, settings)
    local path = PathfindingService:CreatePath(settings or {
        AgentRadius = 2,
        AgentHeight = 5,
        AgentCanJump = true,
        AgentJumpHeight = 7,
        AgentMaxSlope = 45
    })

    -- Asegur√°ndonos de que usamos HumanoidRootPart y no PrimaryPart
    local startPosition = character:FindFirstChild("HumanoidRootPart")
    if not startPosition then
        warn("No HumanoidRootPart found for character!")
        return nil
    end

    path:ComputeAsync(startPosition.Position, destination)
    return path
end

function Path.followPath(character, path)
    if path.Status ~= Enum.PathStatus.Success then return false end
    local waypoints = path:GetWaypoints()
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    
    if not humanoid then return false end
    
    for _, waypoint in ipairs(waypoints) do
        if waypoint.Action == Enum.PathWaypointAction.Jump then
            humanoid.Jump = true
        end
        humanoid:MoveTo(waypoint.Position)
        humanoid.MoveToFinished:Wait()
    end
    
    return true
end

function Path.getNearestPlayer(localPlayer)
    local nearestPlayer = nil
    local shortestDistance = math.huge
    local localCharacter = localPlayer.Character
    if not localCharacter or not localCharacter:FindFirstChild("HumanoidRootPart") then return nil end

    local localPosition = localCharacter.HumanoidRootPart.Position

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - localPosition).Magnitude
            if distance < shortestDistance then
                shortestDistance = distance
                nearestPlayer = player
            end
        end
    end

    return nearestPlayer
end

return Path
